# Template for executing all SQL files matching a string search

parameters:
- name: path #$path = "$(System.DefaultWorkingDirectory)\Functions"
  type: string
- name: match #$match = "BASE_*.sql"
  type: string
- name: outPath #$outPath = "$(System.DefaultWorkingDirectory)\Functions"
  type: string
- name: outName #$outName = "BASE.sql"
  type: string

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      echo Source Files:
      Get-ChildItem ${{parameters.path}} -include ${{parameters.match}} -rec 
  displayName: 'Files to process: ${{parameters.match}}'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      echo Creating: ${{parameters.outPath}}\${{parameters.outName}}
      Get-ChildItem ${{parameters.path}} -include ${{parameters.match}} -rec | ForEach-Object {gc $_; ""} | out-file ${{parameters.outPath}}\${{parameters.outName}}
  displayName: 'Combine: ${{parameters.outName}}'
- task: PublishPipelineArtifact@1
  inputs:
   artifact: '${{parameters.outName}}'
  #  targetPath: '$(System.ArtifactsDirectory)\$(SQLPoolartifactname)\$(Targetfile)'
   targetPath: '${{parameters.outPath}}\${{parameters.outName}}'
   publishLocation: 'pipeline'
  displayName: 'Publish: ${{parameters.outName}}'
# - task: SqlDacpacDeploymentOnMachineGroup@0
#   inputs:
#     TaskType: 'sqlQuery'
#     SqlFile: '${{parameters.outPath}}\${{parameters.outName}}'
#     ServerName: '$(SQL_ServerName).database.windows.net'
#     DatabaseName: '$(SQL_DatabaseName)'
#     AuthScheme: 'sqlServerAuthentication'
#     SqlUsername: '$(SQL_UserName)'
#     SqlPassword: '$(SQL_Password)'
#   displayName: 'Create or Alter: ${{parameters.outName}}'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      CREATE DATABASE SCOPED CREDENTIAL SynapseIdentity
      WITH IDENTITY = 'Managed Identity'
      CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'sdfgje432FND'
      GO
      CREATE LOGIN synlog WITH PASSWORD = 'sdfgje432FND''
      CREATE USER synlog FROM LOGIN synlog
      ALTER ROLE db datareader ADD MEMBER synlog
  displayName: 'Set Permissions'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Invoke-Sqlcmd -InputFile "${{parameters.outPath}}\${{parameters.outName}}" -ServerInstance $(SQLPoolEndpoint) -Database $(DestinationDB) -Username "$(SQLPooluser)" -Password "$(SQLPoolpw)" -QueryTimeout 36000 -Verbose
  displayName: 'Run SQL Script'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: Remove-Item ${{parameters.path}}\${{parameters.match}} -Recurse
  displayName: 'Delete Files: ${{parameters.match}}' 